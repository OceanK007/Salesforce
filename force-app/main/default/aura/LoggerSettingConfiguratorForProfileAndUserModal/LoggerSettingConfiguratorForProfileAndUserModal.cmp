<aura:component controller="LoggerSettingConfiguratorController">
    <aura:attribute name="descriptionObject" type="Object" access="public" description="Description Map to Fetch Label, Helptext for fields" />
	<aura:attribute name="loggerRecords" type="List" access="public" description="Attribute to hold Logger custom settings data for profile and user"  />
    <aura:attribute name="loggerRecord" type="Object" access="public" description="Attribute to hold Logger custom settings data for profile and user"  />
    <aura:attribute name="modalMode" type="String" access="public" description="Attribute to check either to edit or view record" />
    <aura:attribute name="showSpinner" type="Boolean" default="false" access="private" description="Displaying spinner while loading" />
    <aura:attribute name="profiles" type="List" access="public" description="To hold all profiles records" />
    <aura:attribute name="users" type="List" access="public" description="To hold all users records" />
    <aura:attribute name="locationValue" type="String" default="profile" access="public" description="To set the default value of location dropdown" />
    <aura:attribute name="displayProfileLookup" type="Boolean" default="true" access="public" description="To check, either to display profile lookup or user lookup" />
    <aura:attribute name="selectedRecord" access="public" type ="Object"  description="Used to hold selected record (Profile/User)"  />    
    <aura:attribute name="objectAPIName" type="String" access="public" default="Profile" description="Object API name" />
    <aura:attribute name="isReadOnly" access="public" default="false" type="Boolean" description="To display lookup either read only or editable" />    
    <aura:attribute name="iconName" type="string" access="public" default="standard:account" description="Lookup icon for lookup object"/>
    
    <lightning:overlayLibrary aura:id="overlayLib"/>
    
    <aura:handler name="init" action="{!c.doInit}" value="{!this}" description="Fetching Logger custom setting data after component has initialized" />
    
    <aura:if isTrue="{!v.showSpinner}">
        <lightning:spinner />
    </aura:if>
     <lightning:card>         
         <!-- Card Footer -->
         <aura:set attribute="footer">
             <aura:if isTrue="{!v.modalMode == 'edit' || v.modalMode == 'new'}">
                 <div class="slds-text-align_right">
                     <lightning:button label="Cancel" 
                                       class="slds-m-top--medium slds-m-right_xx-small"
                                       onclick="{!c.handleViewLoggerRecord}"/>
                     <lightning:button label="{!(v.loggerRecord.Id == null ? 'Save' : 'Save')}" 
                                       class="slds-m-top--medium slds-m-right_xx-small"
                                       variant="brand"
                                       onclick="{!c.handleUpsertLoggerSettingsRecord}"/>
                 </div>
             </aura:if>
         </aura:set>
         
         <!-- Card Action -->
         <aura:set attribute="actions">                        
             <aura:if isTrue="{!v.modalMode == 'view'}">
                 <lightning:button label="Edit" onclick="{!c.handleEditLoggerRecord}"/>
             </aura:if>
         </aura:set>
         
         <!-- Card Body -->
         <lightning:layout multipleRows="true">
             <lightning:layoutItem size="12" smallDeviceSize="12" mediumDeviceSize="12" largeDeviceSize="6">
             	<div class="slds-m-horizontal--large slds-m-vertical--x-small"> 
                    <lightning:select aura:id="location"
                                      name="location" 
                                      label="Location" 
                                      required="true" 
                                      disabled="{!v.modalMode == 'view'}" 
                                      value="{!v.locationValue}"
                                      onchange="{!c.handleOnChangeLocation}">
                        <option value="profile">Profile</option>
                        <option value="user">User</option>
                    </lightning:select>  
                 </div>
             </lightning:layoutItem>
             <lightning:layoutItem size="12" smallDeviceSize="12" mediumDeviceSize="12" largeDeviceSize="6">
                 <div class="slds-m-horizontal--large slds-m-vertical--x-small"> 
                 	<c:LoggerSettingConfiguratorLookupContainer objectAPIName="{!v.objectAPIName}"
                                                               iconName="{!v.iconName}"
                                                               selectedRecord="{!v.selectedRecord}"
                                                               isReadOnly="{!v.isReadOnly}" />
                 </div>
                 
             </lightning:layoutItem>
             
             <lightning:layoutItem size="12" smallDeviceSize="12" mediumDeviceSize="12" largeDeviceSize="6">
                 <div class="slds-m-horizontal--large slds-m-vertical--x-small"> 
                     <label class="slds-form-element__label" for="text-input-id-1">
                         <aura:if isTrue="{!v.modalMode == 'edit' || v.modalMode == 'new'}">
                             <aura:if isTrue="{!v.descriptionObject.ivpcc__buffer_heap_for_log_content_creation__c.required == 'true'}">
                                 <abbr class="slds-required" title="required">*</abbr>
                             </aura:if>
                         </aura:if>
                         {!v.descriptionObject.ivpcc__buffer_heap_for_log_content_creation__c.label}
                     </label>
                     <aura:if isTrue="{!v.descriptionObject.ivpcc__buffer_heap_for_log_content_creation__c.helptext}">
                         <lightning:helptext content="{!v.descriptionObject.ivpcc__buffer_heap_for_log_content_creation__c.helptext}" iconName="utility:info" /> 
                     </aura:if>                            
                     <aura:if isTrue="{!v.modalMode == 'edit' || v.modalMode == 'new'}">
                         <lightning:input type="number"
                                          aura:id="recordform" 
                                          label="{!v.descriptionObject.ivpcc__buffer_heap_for_log_content_creation__c.label}"                                            
                                          value="{!v.loggerRecord.ivpcc__Buffer_Heap_For_Log_Content_Creation__c}"
                                          required="{!v.descriptionObject.ivpcc__buffer_heap_for_log_content_creation__c.required == 'true' ? true : false}"
                                          class="hideLabel"/> 
                         <aura:set attribute="else">
                             <div class="slds-form-element_readonly slds-p-bottom_xx-small">{!v.loggerRecord.ivpcc__Buffer_Heap_For_Log_Content_Creation__c}</div>
                         </aura:set>
                     </aura:if>
                     
                 </div>
             </lightning:layoutItem>
             <lightning:layoutItem size="12" smallDeviceSize="12" mediumDeviceSize="12" largeDeviceSize="6">
                 <div class="slds-m-horizontal--large slds-m-vertical--x-small"> 
                     <label class="slds-form-element__label" for="text-input-id-1">
                         <aura:if isTrue="{!v.modalMode == 'edit' || v.modalMode == 'new'}">
                             <aura:if isTrue="{!v.descriptionObject.ivpcc__log_levels__c.required == 'true'}">
                                 <abbr class="slds-required" title="required">*</abbr>
                             </aura:if>
                         </aura:if>
                         {!v.descriptionObject.ivpcc__log_levels__c.label}
                     </label>
                     <aura:if isTrue="{!v.descriptionObject.ivpcc__log_levels__c.helptext}">
                         <lightning:helptext content="{!v.descriptionObject.ivpcc__log_levels__c.helptext}" iconName="utility:info" /> 
                     </aura:if>  
                     <aura:if isTrue="{!v.modalMode == 'edit' || v.modalMode == 'new'}">
                         <lightning:input aura:id="recordform" 
                                          label="{!v.descriptionObject.ivpcc__log_levels__c.label}"
                                          value="{!v.loggerRecord.ivpcc__Log_Levels__c}"
                                          required="{!v.descriptionObject.ivpcc__log_levels__c.required == 'true' ? true : false}"
                                          class="hideLabel"/>
                         <aura:set attribute="else">
                             <div class="slds-form-element_readonly slds-p-bottom_xx-small">{!v.loggerRecord.ivpcc__Log_Levels__c}</div>
                         </aura:set>
                     </aura:if>
                 </div>
             </lightning:layoutItem>
             <lightning:layoutItem size="12" smallDeviceSize="12" mediumDeviceSize="12" largeDeviceSize="6">
                 <div class="slds-m-horizontal--large slds-m-vertical--x-small"> 
                     <label class="slds-form-element__label" for="text-input-id-1">
                         <aura:if isTrue="{!v.modalMode == 'edit' || v.modalMode == 'new'}">
                             <aura:if isTrue="{!v.descriptionObject.ivpcc__max_heap_allocated_for_logger__c.required == 'true'}">
                                 <abbr class="slds-required" title="required">*</abbr>
                             </aura:if>
                         </aura:if>
                         {!v.descriptionObject.ivpcc__max_heap_allocated_for_logger__c.label}
                     </label>
                     <aura:if isTrue="{!v.descriptionObject.ivpcc__max_heap_allocated_for_logger__c.helptext}">
                         <lightning:helptext content="{!v.descriptionObject.ivpcc__max_heap_allocated_for_logger__c.helptext}" iconName="utility:info" /> 
                     </aura:if>  
                     <aura:if isTrue="{!v.modalMode == 'edit' || v.modalMode == 'new'}">
                         <lightning:input type="number"
                                          aura:id="recordform" 
                                          label="{!v.descriptionObject.ivpcc__max_heap_allocated_for_logger__c.label}"
                                          value="{!v.loggerRecord.ivpcc__Max_Heap_Allocated_For_Logger__c}"
                                          required="{!v.descriptionObject.ivpcc__max_heap_allocated_for_logger__c.required == 'true' ? true : false}"
                                          class="hideLabel"/>  
                         <aura:set attribute="else">
                             <div class="slds-form-element_readonly slds-p-bottom_xx-small">{!v.loggerRecord.ivpcc__Max_Heap_Allocated_For_Logger__c}</div>
                         </aura:set>
                     </aura:if>
                 </div>
             </lightning:layoutItem>
             <lightning:layoutItem size="12" smallDeviceSize="12" mediumDeviceSize="12" largeDeviceSize="6">
                 <div class="slds-m-horizontal--large slds-m-vertical--x-small"> 
                     <label class="slds-form-element__label" for="text-input-id-1">
                         <aura:if isTrue="{!v.modalMode == 'edit' || v.modalMode == 'new'}">
                             <aura:if isTrue="{!v.descriptionObject.ivpcc__max_log_capture_size__c.required == 'true'}">
                                 <abbr class="slds-required" title="required">*</abbr>
                             </aura:if>
                         </aura:if>
                         {!v.descriptionObject.ivpcc__max_log_capture_size__c.label}
                     </label>
                     <aura:if isTrue="{!v.descriptionObject.ivpcc__max_log_capture_size__c.helptext}">
                         <lightning:helptext content="{!v.descriptionObject.ivpcc__max_log_capture_size__c.helptext}" iconName="utility:info" /> 
                     </aura:if>
                     <aura:if isTrue="{!v.modalMode == 'edit' || v.modalMode == 'new'}">
                         <lightning:input type="number"
                                          aura:id="recordform" 
                                          label="{!v.descriptionObject.ivpcc__max_log_capture_size__c.label}"
                                          value="{!v.loggerRecord.ivpcc__Max_Log_Capture_Size__c}"
                                          required="{!v.descriptionObject.ivpcc__max_log_capture_size__c.required == 'true' ? true : false}"
                                          class="hideLabel"/> 
                         <aura:set attribute="else">
                             <div class="slds-form-element_readonly slds-p-bottom_xx-small">{!v.loggerRecord.ivpcc__Max_Log_Capture_Size__c}</div>
                         </aura:set>
                     </aura:if>
                 </div>
             </lightning:layoutItem>
         </lightning:layout>
    </lightning:card>
    
</aura:component>